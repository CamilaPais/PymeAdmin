Notas
-----

Entradas/Inflow
			InflowItem
			Peso:float
			Pago (efvo/tarjeta)

Salidas/Outflow
			Compras a proveedor
			Pago de deuda
			Fiado
			Estado de cuenta x proveedor

Product
	name:string
	price:float
	promotion_price:float


Notificaciones
				Pedidos
				Bajo stock x proveedor (genera lista de compras)
				Desactivables

Estadísticas
			  Caja
			  Balance
			  Venta por item (en kg y en $)

Temas a hablar con Sandra:

Tasks:
Calcular total y subtotal automáticamente
inflow and outflow items que se lean horizontalmente para que ocupen menos espacio
Delete function from forms doesn't actually delete stuff
I18n: Traducción a español
Controller: Pages
	take
	statistics
		gross sales by item (kg/$)
		rush hour
		cost of goods sold (costos)
		gross margin
		net profit
		total cashflow
	balances (y - s - m - w)
Producto + quantity => inflow
Creación de Inflow con respectivos II y Outflow con OI
	Select con autocomplete, javascript
Limitar index a últimas n entradas para evitar carga lenta, dar opción a cargar de a n cantidad por vez
	index method within controller, Project.all  -x-> custom query
Actualización de VISTAS Supplier account_balance en creación de Outflow entry
remove sprockets


@outflow.save
	@outflow.supplier
		balance = @supplier.balance + @outflow.amount
		@supplier.update_attribute(:balance => balance)
end

Probably going to need this vocabulary:
cash
credit
cashflow		inflow
				outflow
statistics
debt
expenses
income
take (caja del día)
petty cash (caja chica)
deficit
discount
sale price
due date
rent
services
tax
expenditure
forecasting / projection
gross income
gross margin
gross sales
net sales
product half-life
inventory / stock
merchandise
salary
margin of profit
net income
net proceeds
net sales
net worth
premium
vendor
supplier
wage


YAML translation file


STACK OVERFLOW : HOW TO DRY OUT THE FILE ("elegant solution")
			dictionary:
			  email: &email Email
			  name: &name Name
			  password: &password Password
			  confirmation: &confirmation Confirmation

			activerecord:
			  attributes:
			    user:
			      email: *email
			      name: *name
			      password: *password
			      password_confirmation: *confirmation
			  models:
			    user: User
			users:
			  fields:
			    email: *email
			    name: *name
			    password: *password
			    confirmation: *confirmation
			sessions:
			  new:
			    email: *email
			    password: *password


Use "lazy" lookup for the texts used in views. Let’s say we have the following structure:
			en:
			  users:
			    show:
			      title: 'User details page'
			The value for users.show.title can be looked up in the template app/views/users/show.html.haml like this:

			= t '.title'

Any translation that should be kept throughout the site should be namespaced to app. For example, if we wanted to translate "Codealia", we would need to do something like the following:
			en:
			  app:
			    codealia: "Codealia"

Translation Categories
			In addition to namespacing, to avoid conflicts within views, we introduce a couple of categories to organize translations in:

			headings - Translations related to headings in the document
			labels - Translations which are used to identify parts of the document. e.g. form labels, table headers, etc.
			flash - For flash messages
			links - Translations related to followable links


